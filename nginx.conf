worker_processes auto;
events { worker_connections 1024; }

http {
  include       mime.types;
  default_type  application/octet-stream;
  sendfile        on;
  keepalive_timeout  65;

  proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=app_cache:10m max_size=100m inactive=60m use_temp_path=off;

  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  server {
    listen 80;
    server_name _;

    # Static assets
    location /browser/ {
      alias /usr/share/nginx/html/browser/;
      expires 1y;
      add_header Cache-Control "public, max-age=31536000, immutable";
    }

    # API (no cache)
    location /api/ {
      proxy_pass http://app:4000;
      proxy_set_header Host $host;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
    }

    # WebSocket passthrough
    location /ws {
      proxy_pass http://app:4000;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
    }

    # SSR routes with cache; bypass when v query present
    location / {
      proxy_cache app_cache;
      proxy_cache_key "$scheme$proxy_host$request_uri";
      proxy_cache_lock on;
      proxy_ignore_headers Set-Cookie;
      add_header X-Cache-Status $upstream_cache_status;

      # Bypass cache when query param v is present
      if ($arg_v) {
        set $skip_cache 1;
      }
      proxy_no_cache $skip_cache;
      proxy_cache_bypass $skip_cache;

      proxy_pass http://app:4000;
      proxy_set_header Host $host;
      proxy_http_version 1.1;
      proxy_set_header Connection "";
    }
  }
}


